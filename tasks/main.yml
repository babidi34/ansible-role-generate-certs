--- 

- name: Include OS-specific variables.
  include_vars: "RedHat-7.yml"
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'

# tasks file for cert_selfsigned 
- name: Install requirement for generate cert_selfsigned
  block:
    - name: install python3 and pip3
      package:
        name:
          - python3
          - python3-pip
          - openssl
        state: present
        update_cache: true        

    - name: Update pip and setuptools
      pip:
        name:
          - pip
        state: latest
#      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'

    - name: pip install cryptography
      pip:
        name: 
          - cryptography
          - pyOpenSSL

- name: Create necessary SSL directories if they do not exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0751'
    owner: "{{ ssl_directory_owner }}"
    group: "{{ ssl_directory_owner }}"
    recurse: true
  loop:
    - "{{ ssl_private_key_dir }}"
    - "{{ ssl_certs_dir }}"

- name: Generate CA self-signed certificate
  block:
    - name: Generate an OpenSSL private key for CA with default values (4096 bits, RSA)
      openssl_privatekey:
        path: "{{ tmp_dir }}/{{ cert_ca_key_name }}"

    - name: Generate the CA CSR file signed with the private key
      openssl_csr:
        path: "{{ ssl_certs_dir }}/{{ cert_ca_req_name }}"
        privatekey_path: "{{ tmp_dir }}/{{ cert_ca_key_name }}"
        country_name: "{{ cert_country_name }}"
        organization_name: "{{ cert_organization_name }}"
        email_address: "{{ cert_email_address }}"
        common_name: "{{ cert_ca_cname }}"

    - name: Sign the CA CSR file to turn it into a self-signed certificate
      openssl_certificate:
        path: "{{ tmp_dir }}/{{ cert_ca_crt_name }}"
        privatekey_path: "{{ tmp_dir }}/{{ cert_ca_key_name }}"
        csr_path: "{{ ssl_certs_dir }}/{{ cert_ca_req_name }}"
        provider: selfsigned

    - name: Copy CA keys to the remote host
      copy:
        src: "{{ item.s }}"
        dest: "{{ item.d }}"
        owner: "{{ item.o }}"
        group: "{{ item.g }}"
        mode: "{{ item.m }}"
        force: no
        remote_src: yes
      with_items:
        - { s: "{{ tmp_dir }}/{{ cert_ca_key_name }}", d: "{{ ssl_private_key_dir }}", m: '600', o: "{{ ssl_private_key_owner }}", g: "{{ ssl_private_key_group }}" }
        - { s: "{{ tmp_dir }}/{{ cert_ca_crt_name }}", d: "{{ ssl_certs_dir }}", m: '644', o: "{{ ssl_certs_owner }}", g: "{{ ssl_certs_group }}" }
